{"ast":null,"code":"var _jsxFileName = \"/Users/fastnet/devedu/MIT/banking-application-fe/banking-app/mit-banking-app/src/components/Deposit.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport useUserContext from \"../hooks/useUserContext\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Button, TextField, Box } from \"@mui/material\";\nimport { toast } from \"react-toastify\";\nimport createTransaction from \"../helpers/createTransaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Deposit = () => {\n  _s();\n  const [isDisabled, setIsDisabled] = useState(true);\n  const {\n    user,\n    setUser,\n    loggedInUser,\n    setLoggedInUser\n  } = useUserContext();\n  const [balance, setBalance] = useState();\n  const validationSchema = yup.object({\n    depositAmount: yup.number().min(1, \"Must be greater or equal than $1\").required(\"Deposit Amount is required\").typeError(\"The deposit amount must be a number\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      depositAmount: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: () => {\n      //Verify if there's logged in user\n      if (!loggedInUser) {\n        toast.error(\"Please login to make a successful transaction\");\n        return;\n      }\n      const depAmount = parseFloat(formik.values.depositAmount);\n      let newBalance = 0;\n      const newData = user.map(u => {\n        if (u.email === loggedInUser.email) {\n          u.balance += depAmount;\n          newBalance = u.balance;\n          const newTransaction = createTransaction(\"Deposit\", depAmount);\n          u.transactionHistory.push(newTransaction);\n          setBalance(u.balance);\n        }\n        return u;\n      });\n      setUser(newData);\n      setLoggedInUser(prev => ({\n        ...prev,\n        balance: newBalance\n      }));\n      formik.resetForm();\n      toast.success(\"Deposit successful\");\n      return;\n    }\n  });\n\n  //Get initial balance\n  useEffect(() => {\n    if (loggedInUser) {\n      setBalance(loggedInUser.balance);\n    }\n  }, [loggedInUser]);\n\n  //Listen for formik values changes\n  useEffect(() => {\n    const {\n      depositAmount\n    } = formik.values;\n    if (depositAmount.trim().length > 0) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n  }, [formik.values]);\n  const customStyles = {\n    width: \"fit-content\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loggedInUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please login to your account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: customStyles,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Deposit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: [\"Balance \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", balance]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            m: 2,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"text-box custom-input-box\",\n              id: \"depositAmount\",\n              name: \"depositAmount\",\n              label: \"Deposit Amount\",\n              value: formik.values.depositAmount,\n              onChange: formik.handleChange,\n              error: formik.touched.depositAmount && Boolean(formik.errors.depositAmount),\n              helperText: formik.touched.depositAmount && formik.errors.depositAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            m: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: formik.handleSubmit,\n              disabled: isDisabled,\n              children: \"Deposit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Deposit, \"O1c7iml4KMW+/9s+7rdNR8rIwiE=\", false, function () {\n  return [useUserContext, useFormik];\n});\n_c = Deposit;\nexport default Deposit;\nvar _c;\n$RefreshReg$(_c, \"Deposit\");","map":{"version":3,"names":["useState","useEffect","useUserContext","useFormik","yup","Button","TextField","Box","toast","createTransaction","jsxDEV","_jsxDEV","Fragment","_Fragment","Deposit","_s","isDisabled","setIsDisabled","user","setUser","loggedInUser","setLoggedInUser","balance","setBalance","validationSchema","object","depositAmount","number","min","required","typeError","formik","initialValues","onSubmit","error","depAmount","parseFloat","values","newBalance","newData","map","u","email","newTransaction","transactionHistory","push","prev","resetForm","success","trim","length","customStyles","width","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","m","id","name","label","value","onChange","handleChange","touched","Boolean","errors","helperText","variant","onClick","handleSubmit","disabled","_c","$RefreshReg$"],"sources":["/Users/fastnet/devedu/MIT/banking-application-fe/banking-app/mit-banking-app/src/components/Deposit.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport useUserContext from \"../hooks/useUserContext\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Button, TextField, Box } from \"@mui/material\";\nimport { toast } from \"react-toastify\";\n\nimport createTransaction from \"../helpers/createTransaction\";\n\nconst Deposit = () => {\n  const [isDisabled, setIsDisabled] = useState(true);\n  const { user, setUser, loggedInUser, setLoggedInUser } = useUserContext();\n  const [balance, setBalance] = useState();\n\n  const validationSchema = yup.object({\n    depositAmount: yup\n      .number()\n      .min(1, \"Must be greater or equal than $1\")\n      .required(\"Deposit Amount is required\")\n      .typeError(\"The deposit amount must be a number\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      depositAmount: \"\",\n    },\n\n    validationSchema: validationSchema,\n\n    onSubmit: () => {\n      //Verify if there's logged in user\n      if (!loggedInUser) {\n        toast.error(\"Please login to make a successful transaction\");\n        return;\n      }\n\n      const depAmount = parseFloat(formik.values.depositAmount);\n      let newBalance = 0;\n      const newData = user.map((u) => {\n        if (u.email === loggedInUser.email) {\n          u.balance += depAmount;\n          newBalance = u.balance;\n          const newTransaction = createTransaction(\"Deposit\", depAmount);\n          u.transactionHistory.push(newTransaction);\n          setBalance(u.balance);\n        }\n        return u;\n      });\n\n      setUser(newData);\n      setLoggedInUser((prev) => ({ ...prev, balance: newBalance }));\n      formik.resetForm();\n      toast.success(\"Deposit successful\");\n      return;\n    },\n  });\n\n  //Get initial balance\n  useEffect(() => {\n    if (loggedInUser) {\n      setBalance(loggedInUser.balance);\n    }\n  }, [loggedInUser]);\n\n  //Listen for formik values changes\n  useEffect(() => {\n    const { depositAmount } = formik.values;\n\n    if (depositAmount.trim().length > 0) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n  }, [formik.values]);\n\n  const customStyles = {\n    width: \"fit-content\",\n  };\n\n  return (\n    <>\n      {!loggedInUser ? (\n        <>\n          <h3>Deposit</h3>\n          <p>Please login to your account</p>\n        </>\n      ) : (\n        <div className=\"card\" style={customStyles}>\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <h4>Deposit</h4>\n              <h5 className=\"card-title\">\n                Balance <span>${balance}</span>\n              </h5>\n            </div>\n            <div>\n              <Box m={2}>\n                <TextField\n                  className=\"text-box custom-input-box\"\n                  id=\"depositAmount\"\n                  name=\"depositAmount\"\n                  label=\"Deposit Amount\"\n                  value={formik.values.depositAmount}\n                  onChange={formik.handleChange}\n                  error={\n                    formik.touched.depositAmount &&\n                    Boolean(formik.errors.depositAmount)\n                  }\n                  helperText={\n                    formik.touched.depositAmount && formik.errors.depositAmount\n                  }\n                />\n              </Box>\n              <Box m={2}>\n                <Button\n                  variant=\"contained\"\n                  onClick={formik.handleSubmit}\n                  disabled={isDisabled}\n                >\n                  Deposit\n                </Button>\n              </Box>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Deposit;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,MAAM,EAAEC,SAAS,EAAEC,GAAG,QAAQ,eAAe;AACtD,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,OAAOC,iBAAiB,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM;IAAEkB,IAAI;IAAEC,OAAO;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAGnB,cAAc,CAAC,CAAC;EACzE,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,CAAC;EAExC,MAAMwB,gBAAgB,GAAGpB,GAAG,CAACqB,MAAM,CAAC;IAClCC,aAAa,EAAEtB,GAAG,CACfuB,MAAM,CAAC,CAAC,CACRC,GAAG,CAAC,CAAC,EAAE,kCAAkC,CAAC,CAC1CC,QAAQ,CAAC,4BAA4B,CAAC,CACtCC,SAAS,CAAC,qCAAqC;EACpD,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG5B,SAAS,CAAC;IACvB6B,aAAa,EAAE;MACbN,aAAa,EAAE;IACjB,CAAC;IAEDF,gBAAgB,EAAEA,gBAAgB;IAElCS,QAAQ,EAAEA,CAAA,KAAM;MACd;MACA,IAAI,CAACb,YAAY,EAAE;QACjBZ,KAAK,CAAC0B,KAAK,CAAC,+CAA+C,CAAC;QAC5D;MACF;MAEA,MAAMC,SAAS,GAAGC,UAAU,CAACL,MAAM,CAACM,MAAM,CAACX,aAAa,CAAC;MACzD,IAAIY,UAAU,GAAG,CAAC;MAClB,MAAMC,OAAO,GAAGrB,IAAI,CAACsB,GAAG,CAAEC,CAAC,IAAK;QAC9B,IAAIA,CAAC,CAACC,KAAK,KAAKtB,YAAY,CAACsB,KAAK,EAAE;UAClCD,CAAC,CAACnB,OAAO,IAAIa,SAAS;UACtBG,UAAU,GAAGG,CAAC,CAACnB,OAAO;UACtB,MAAMqB,cAAc,GAAGlC,iBAAiB,CAAC,SAAS,EAAE0B,SAAS,CAAC;UAC9DM,CAAC,CAACG,kBAAkB,CAACC,IAAI,CAACF,cAAc,CAAC;UACzCpB,UAAU,CAACkB,CAAC,CAACnB,OAAO,CAAC;QACvB;QACA,OAAOmB,CAAC;MACV,CAAC,CAAC;MAEFtB,OAAO,CAACoB,OAAO,CAAC;MAChBlB,eAAe,CAAEyB,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAExB,OAAO,EAAEgB;MAAW,CAAC,CAAC,CAAC;MAC7DP,MAAM,CAACgB,SAAS,CAAC,CAAC;MAClBvC,KAAK,CAACwC,OAAO,CAAC,oBAAoB,CAAC;MACnC;IACF;EACF,CAAC,CAAC;;EAEF;EACA/C,SAAS,CAAC,MAAM;IACd,IAAImB,YAAY,EAAE;MAChBG,UAAU,CAACH,YAAY,CAACE,OAAO,CAAC;IAClC;EACF,CAAC,EAAE,CAACF,YAAY,CAAC,CAAC;;EAElB;EACAnB,SAAS,CAAC,MAAM;IACd,MAAM;MAAEyB;IAAc,CAAC,GAAGK,MAAM,CAACM,MAAM;IAEvC,IAAIX,aAAa,CAACuB,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;MACnCjC,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,MAAM;MACLA,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,CAACc,MAAM,CAACM,MAAM,CAAC,CAAC;EAEnB,MAAMc,YAAY,GAAG;IACnBC,KAAK,EAAE;EACT,CAAC;EAED,oBACEzC,OAAA,CAAAE,SAAA;IAAAwC,QAAA,EACG,CAACjC,YAAY,gBACZT,OAAA,CAAAE,SAAA;MAAAwC,QAAA,gBACE1C,OAAA;QAAA0C,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChB9C,OAAA;QAAA0C,QAAA,EAAG;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,eACnC,CAAC,gBAEH9C,OAAA;MAAK+C,SAAS,EAAC,MAAM;MAACC,KAAK,EAAER,YAAa;MAAAE,QAAA,eACxC1C,OAAA;QAAK+C,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxB1C,OAAA;UAAK+C,SAAS,EAAC,KAAK;UAAAL,QAAA,gBAClB1C,OAAA;YAAA0C,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChB9C,OAAA;YAAI+C,SAAS,EAAC,YAAY;YAAAL,QAAA,GAAC,UACjB,eAAA1C,OAAA;cAAA0C,QAAA,GAAM,GAAC,EAAC/B,OAAO;YAAA;cAAAgC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACN9C,OAAA;UAAA0C,QAAA,gBACE1C,OAAA,CAACJ,GAAG;YAACqD,CAAC,EAAE,CAAE;YAAAP,QAAA,eACR1C,OAAA,CAACL,SAAS;cACRoD,SAAS,EAAC,2BAA2B;cACrCG,EAAE,EAAC,eAAe;cAClBC,IAAI,EAAC,eAAe;cACpBC,KAAK,EAAC,gBAAgB;cACtBC,KAAK,EAAEjC,MAAM,CAACM,MAAM,CAACX,aAAc;cACnCuC,QAAQ,EAAElC,MAAM,CAACmC,YAAa;cAC9BhC,KAAK,EACHH,MAAM,CAACoC,OAAO,CAACzC,aAAa,IAC5B0C,OAAO,CAACrC,MAAM,CAACsC,MAAM,CAAC3C,aAAa,CACpC;cACD4C,UAAU,EACRvC,MAAM,CAACoC,OAAO,CAACzC,aAAa,IAAIK,MAAM,CAACsC,MAAM,CAAC3C;YAC/C;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACN9C,OAAA,CAACJ,GAAG;YAACqD,CAAC,EAAE,CAAE;YAAAP,QAAA,eACR1C,OAAA,CAACN,MAAM;cACLkE,OAAO,EAAC,WAAW;cACnBC,OAAO,EAAEzC,MAAM,CAAC0C,YAAa;cAC7BC,QAAQ,EAAE1D,UAAW;cAAAqC,QAAA,EACtB;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACN,gBACD,CAAC;AAEP,CAAC;AAAC1C,EAAA,CAvHID,OAAO;EAAA,QAE8CZ,cAAc,EAWxDC,SAAS;AAAA;AAAAwE,EAAA,GAbpB7D,OAAO;AAyHb,eAAeA,OAAO;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}