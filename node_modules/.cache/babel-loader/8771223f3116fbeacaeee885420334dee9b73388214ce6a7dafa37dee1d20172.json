{"ast":null,"code":"/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _isPointInArea, C as getAngleFromPoint, D as toPadding, E as each, F as getMaximumSize, G as _getParentNode, I as readUsedSize, J as throttled, K as supportsEventListenerOptions, L as _isDomSupported, M as log10, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as toDegrees, U as _measureText, V as _int16Range, W as _alignPixel, X as clipArea, Y as renderText, Z as unclipArea, $ as toFont, a0 as _toLeftRightCenter, a1 as _alignStartEnd, a2 as overrides, a3 as merge, a4 as _capitalize, a5 as descriptors, a6 as isFunction, a7 as _attachContext, a8 as _createResolver, a9 as _descriptors, aa as mergeIf, ab as uid, ac as debounce, ad as retinaScale, ae as clearCanvas, af as setsEqual, ag as _elementsEqual, ah as _isClickEvent, ai as _isBetween, aj as _readValueToProps, ak as _updateBezierControlPoints, al as _computeSegments, am as _boundSegments, an as _steppedInterpolation, ao as _bezierInterpolation, ap as _pointInLine, aq as _steppedLineTo, ar as _bezierCurveTo, as as drawPoint, at as addRoundedRectPath, au as toTRBL, av as toTRBLCorners, aw as _boundSegment, ax as _normalizeAngle, ay as getRtlAdapter, az as overrideTextDirection, aA as _textX, aB as restoreTextDirection, aC as noop, aD as distanceBetweenPoints, aE as _setMinAndMaxByKey, aF as niceNum, aG as almostWhole, aH as almostEquals, aI as _decimalPlaces, aJ as _longestText, aK as _filterBetween, aL as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || elapsed < duration);\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n  keys: getSortedDatasetIndices(chart, true),\n  values: null\n};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = this;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || elements.length - start;\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType) {\n    let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    let index = arguments.length > 2 ? arguments[2] : undefined;\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count) {\n    let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = arr => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, _ref, ratio) {\n  let {\n    inflateAmount\n  } = _ref;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = i => +data[i];\n      if (isObject(data[start])) {\n        const {\n          key = 'value'\n        } = this._parsing;\n        getter = i => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {\n      circumference,\n      rotation\n    } = this._getRotationExtents();\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {\n    start,\n    count\n  };\n}\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - radiusLength * this.index;\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nclass PieController extends DoughnutController {}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nclass ScatterController extends LineController {}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {\n      startAngle,\n      endAngle\n    } = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {\n      angle\n    } = getAngleFromPoint(element, {\n      x: position.x,\n      y: position.y\n    });\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {}\n}\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: name => name !== 'backdropPadding'\n});\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {\n      beginAtZero,\n      grace,\n      ticks: tickOpts\n    } = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n          case 'bottom':\n            top -= height;\n            break;\n        }\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n          case 'right':\n            left -= width;\n            break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {\n      position,\n      ticks\n    } = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {\n      textAlign,\n      x\n    };\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: this.left,\n        bottom: chart.height,\n        right: this.right\n      };\n    }\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: this.top,\n        left: 0,\n        bottom: this.bottom,\n        right: chart.width\n      };\n    }\n  }\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: chartArea => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: chartArea => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: chartArea => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    this._each('register', args);\n  }\n  remove() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    this._each('unregister', args);\n  }\n  addControllers() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    this._each('register', args, this.controllers);\n  }\n  addElements() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    this._each('register', args, this.elements);\n  }\n  addPlugins() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    this._each('register', args, this.plugins);\n  }\n  addScales() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n  resolveNamedOptions(scopes, names, context) {\n    let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context) {\n    let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n    let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n      return true;\n    }\n  }\n  return false;\n}\nvar version = \"3.8.0\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {\n      mode\n    });\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {\n      _active,\n      _lastEvent\n    } = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, scale => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {\n      _hiddenIndices\n    } = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {\n      method,\n      start,\n      count\n    } of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n      method: a[1],\n      start: +a[2],\n      count: +a[3]\n    }));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({\n        chart: this\n      });\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {\n      chart: this,\n      type: 'chart'\n    }));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {\n      canvas,\n      ctx\n    } = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image() {\n    return this.canvas.toDataURL(...arguments);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, type => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(_ref2 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref2;\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {\n      _active: lastActive = [],\n      options\n    } = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: function () {\n      registry.add(...arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: function () {\n      registry.remove(...arguments);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {\n    options\n  } = element;\n  const {\n    borderWidth,\n    borderJoinStyle\n  } = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return betweenAngles && withinRadius;\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {\n      options,\n      circumference\n    } = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options) {\n  let style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {\n      property,\n      start: value,\n      end: value\n    });\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || this.points.length - start;\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  let refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {\n      inflateAmount,\n      options: {\n        borderColor,\n        backgroundColor\n      }\n    } = this;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start,\n    count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property,\n    start,\n    end\n  };\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(_ref3 => {\n    let {\n      start,\n      end\n    } = _ref3;\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction _buildStackLine(source) {\n  const {\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first,\n    last,\n    point\n  };\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction _getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {\n    segments,\n    points\n  } = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {\n      start,\n      end\n    } = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {\n      move: lineLoop\n    });\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n  const segments = _segments(line, target, property);\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {\n      options,\n      ctx\n    } = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = this;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {\n    topLeft,\n    topRight,\n    bottomLeft,\n    bottomRight\n  } = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {\n        chart: this.chart,\n        tooltip: this,\n        replay\n      });\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      caretSize,\n      cornerRadius\n    } = options;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {\n      body\n    } = this;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(_ref4 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref4;\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    let inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart,\n        options\n      });\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {\n        index,\n        label\n      } of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref5) {\n  let {\n    horizontal,\n    minRotation\n  } = _ref5;\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {\n      beginAtZero\n    } = this.options;\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    }).filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    let additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n  drawBackground() {\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {\n      min,\n      max\n    };\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return this._cache.data = metas[0].controller.getAllParsedValues(this);\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return this._cache.data = this.normalize(timestamps);\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","createContext","j","defined","s","sign","k","isNullOrUndef","_","_arrayUnique","t","toRadians","m","toPercentage","n","toDimension","T","TAU","o","formatNumber","p","_angleBetween","H","HALF_PI","P","PI","q","isNumber","w","_limitValue","x","_lookupByKey","y","_parseObjectDataRadialScale","z","getRelativePosition","A","_rlookupByKey","B","_isPointInArea","C","getAngleFromPoint","D","toPadding","E","each","F","getMaximumSize","G","_getParentNode","I","readUsedSize","J","throttled","K","supportsEventListenerOptions","L","_isDomSupported","M","log10","N","_factorize","O","finiteOrDefault","Q","callback","R","_addGrace","S","toDegrees","U","_measureText","V","_int16Range","W","_alignPixel","X","clipArea","Y","renderText","Z","unclipArea","$","toFont","a0","_toLeftRightCenter","a1","_alignStartEnd","a2","overrides","a3","merge","a4","_capitalize","a5","descriptors","a6","isFunction","a7","_attachContext","a8","_createResolver","a9","_descriptors","aa","mergeIf","ab","uid","ac","debounce","ad","retinaScale","ae","clearCanvas","af","setsEqual","ag","_elementsEqual","ah","_isClickEvent","ai","_isBetween","aj","_readValueToProps","ak","_updateBezierControlPoints","al","_computeSegments","am","_boundSegments","an","_steppedInterpolation","ao","_bezierInterpolation","ap","_pointInLine","aq","_steppedLineTo","ar","_bezierCurveTo","as","drawPoint","at","addRoundedRectPath","au","toTRBL","av","toTRBLCorners","aw","_boundSegment","ax","_normalizeAngle","ay","getRtlAdapter","az","overrideTextDirection","aA","_textX","aB","restoreTextDirection","aC","noop","aD","distanceBetweenPoints","aE","_setMinAndMaxByKey","aF","niceNum","aG","almostWhole","aH","almostEquals","aI","_decimalPlaces","aJ","_longestText","aK","_filterBetween","aL","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","call","window","_update","arguments","length","Date","now","remaining","running","items","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","visibleMetas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","_ref","inflateAmount","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_ref2","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_ref3","_createBoundaryLine","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref4","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","_ref5","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["/Users/fastnet/devedu/MIT/banking-application-fe/banking-app/mit-banking-app/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _isPointInArea, C as getAngleFromPoint, D as toPadding, E as each, F as getMaximumSize, G as _getParentNode, I as readUsedSize, J as throttled, K as supportsEventListenerOptions, L as _isDomSupported, M as log10, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as toDegrees, U as _measureText, V as _int16Range, W as _alignPixel, X as clipArea, Y as renderText, Z as unclipArea, $ as toFont, a0 as _toLeftRightCenter, a1 as _alignStartEnd, a2 as overrides, a3 as merge, a4 as _capitalize, a5 as descriptors, a6 as isFunction, a7 as _attachContext, a8 as _createResolver, a9 as _descriptors, aa as mergeIf, ab as uid, ac as debounce, ad as retinaScale, ae as clearCanvas, af as setsEqual, ag as _elementsEqual, ah as _isClickEvent, ai as _isBetween, aj as _readValueToProps, ak as _updateBezierControlPoints, al as _computeSegments, am as _boundSegments, an as _steppedInterpolation, ao as _bezierInterpolation, ap as _pointInLine, aq as _steppedLineTo, ar as _bezierCurveTo, as as drawPoint, at as addRoundedRectPath, au as toTRBL, av as toTRBLCorners, aw as _boundSegment, ax as _normalizeAngle, ay as getRtlAdapter, az as overrideTextDirection, aA as _textX, aB as restoreTextDirection, aC as noop, aD as distanceBetweenPoints, aE as _setMinAndMaxByKey, aF as niceNum, aG as almostWhole, aH as almostEquals, aI as _decimalPlaces, aJ as _longestText, aK as _filterBetween, aL as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.8.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}