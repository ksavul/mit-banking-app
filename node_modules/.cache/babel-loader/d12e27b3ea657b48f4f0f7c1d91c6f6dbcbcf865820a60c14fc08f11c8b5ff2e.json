{"ast":null,"code":"import _slicedToArray from \"/Users/fastnet/devedu/MIT/banking-application-fe/banking-app/mit-banking-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"classes\", \"className\", \"closeAfterTransition\", \"component\", \"components\", \"componentsProps\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"onTransitionEnter\", \"onTransitionExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport Portal from '../Portal';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../TrapFocus';\nimport { getModalUtilityClass } from './modalUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var open = ownerState.open,\n    exited = ownerState.exited,\n    classes = ownerState.classes;\n  var slots = {\n    root: ['root', !open && exited && 'hidden']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\nvar defaultManager = new ModalManager();\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nvar ModalUnstyled = /*#__PURE__*/React.forwardRef(function ModalUnstyled(props, ref) {\n  var _props$ariaHidden, _componentsProps$root;\n  var children = props.children,\n    classesProp = props.classes,\n    className = props.className,\n    _props$closeAfterTran = props.closeAfterTransition,\n    closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n    _props$component = props.component,\n    component = _props$component === void 0 ? 'div' : _props$component,\n    _props$components = props.components,\n    components = _props$components === void 0 ? {} : _props$components,\n    _props$componentsProp = props.componentsProps,\n    componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n    container = props.container,\n    _props$disableAutoFoc = props.disableAutoFocus,\n    disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n    _props$disableEnforce = props.disableEnforceFocus,\n    disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n    _props$disableEscapeK = props.disableEscapeKeyDown,\n    disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n    _props$disablePortal = props.disablePortal,\n    disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n    _props$disableRestore = props.disableRestoreFocus,\n    disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n    _props$disableScrollL = props.disableScrollLock,\n    disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n    _props$hideBackdrop = props.hideBackdrop,\n    hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n    _props$keepMounted = props.keepMounted,\n    keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n    _props$manager = props.manager,\n    manager = _props$manager === void 0 ? defaultManager : _props$manager,\n    onBackdropClick = props.onBackdropClick,\n    onClose = props.onClose,\n    onKeyDown = props.onKeyDown,\n    open = props.open,\n    onTransitionEnter = props.onTransitionEnter,\n    onTransitionExited = props.onTransitionExited,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    exited = _React$useState2[0],\n    setExited = _React$useState2[1];\n  var modal = React.useRef({});\n  var mountNodeRef = React.useRef(null);\n  var modalRef = React.useRef(null);\n  var handleRef = useForkRef(modalRef, ref);\n  var hasTransition = getHasTransition(props);\n  var ariaHiddenProp = (_props$ariaHidden = props['aria-hidden']) != null ? _props$ariaHidden : true;\n  var getDoc = function getDoc() {\n    return ownerDocument(mountNodeRef.current);\n  };\n  var getModal = function getModal() {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n  var handleMounted = function handleMounted() {\n    manager.mount(getModal(), {\n      disableScrollLock: disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n  var handleOpen = useEventCallback(function () {\n    var resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  var isTopModal = React.useCallback(function () {\n    return manager.isTopModal(getModal());\n  }, [manager]);\n  var handlePortalRef = useEventCallback(function (node) {\n    mountNodeRef.current = node;\n    if (!node) {\n      return;\n    }\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  var handleClose = React.useCallback(function () {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [manager, ariaHiddenProp]);\n  React.useEffect(function () {\n    return function () {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(function () {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n  var ownerState = _extends({}, props, {\n    classes: classesProp,\n    closeAfterTransition: closeAfterTransition,\n    disableAutoFocus: disableAutoFocus,\n    disableEnforceFocus: disableEnforceFocus,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    disablePortal: disablePortal,\n    disableRestoreFocus: disableRestoreFocus,\n    disableScrollLock: disableScrollLock,\n    exited: exited,\n    hideBackdrop: hideBackdrop,\n    keepMounted: keepMounted\n  });\n  var classes = useUtilityClasses(ownerState);\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n  var handleEnter = function handleEnter() {\n    setExited(false);\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n  var handleExited = function handleExited() {\n    setExited(true);\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n  var handleBackdropClick = function handleBackdropClick(event) {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n  var handleKeyDown = function handleKeyDown(event) {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n  var childProps = {};\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n  var Root = components.Root || component;\n  var rootProps = appendOwnerState(Root, _extends({\n    role: 'presentation'\n  }, other, componentsProps.root, {\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    className: clsx(classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className, className)\n  }), ownerState);\n  var BackdropComponent = components.Backdrop;\n  var backdropProps = appendOwnerState(BackdropComponent, _extends({\n    'aria-hidden': true,\n    open: open,\n    onClick: handleBackdropClick\n  }, componentsProps.backdrop), ownerState);\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(TrapFocus, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalUnstyled.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Backdrop: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    backdrop: PropTypes.object,\n    root: PropTypes.object\n  }),\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default ModalUnstyled;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","elementAcceptingRef","HTMLElementType","unstable_ownerDocument","ownerDocument","unstable_useForkRef","useForkRef","unstable_createChainedFunction","createChainedFunction","unstable_useEventCallback","useEventCallback","composeClasses","appendOwnerState","Portal","ModalManager","ariaHidden","TrapFocus","getModalUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","open","exited","classes","slots","root","getContainer","container","getHasTransition","props","children","hasOwnProperty","defaultManager","ModalUnstyled","forwardRef","ref","_props$ariaHidden","_componentsProps$root","classesProp","className","_props$closeAfterTran","closeAfterTransition","_props$component","component","_props$components","components","_props$componentsProp","componentsProps","_props$disableAutoFoc","disableAutoFocus","_props$disableEnforce","disableEnforceFocus","_props$disableEscapeK","disableEscapeKeyDown","_props$disablePortal","disablePortal","_props$disableRestore","disableRestoreFocus","_props$disableScrollL","disableScrollLock","_props$hideBackdrop","hideBackdrop","_props$keepMounted","keepMounted","_props$manager","manager","onBackdropClick","onClose","onKeyDown","onTransitionEnter","onTransitionExited","other","_React$useState","useState","_React$useState2","_slicedToArray","setExited","modal","useRef","mountNodeRef","modalRef","handleRef","hasTransition","ariaHiddenProp","getDoc","current","getModal","mountNode","handleMounted","mount","scrollTop","handleOpen","resolvedContainer","body","add","isTopModal","useCallback","handlePortalRef","node","handleClose","remove","useEffect","handleEnter","handleExited","handleBackdropClick","event","target","currentTarget","handleKeyDown","key","stopPropagation","childProps","tabIndex","undefined","onEnter","onExited","Root","rootProps","role","BackdropComponent","Backdrop","backdropProps","onClick","backdrop","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","isRequired","object","string","bool","elementType","shape","oneOfType","func"],"sources":["/Users/fastnet/devedu/MIT/banking-application-fe/banking-app/mit-banking-app/node_modules/@mui/base/ModalUnstyled/ModalUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"classes\", \"className\", \"closeAfterTransition\", \"component\", \"components\", \"componentsProps\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"onTransitionEnter\", \"onTransitionExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport Portal from '../Portal';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../TrapFocus';\nimport { getModalUtilityClass } from './modalUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nconst defaultManager = new ModalManager();\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst ModalUnstyled = /*#__PURE__*/React.forwardRef(function ModalUnstyled(props, ref) {\n  var _props$ariaHidden, _componentsProps$root;\n\n  const {\n    children,\n    classes: classesProp,\n    className,\n    closeAfterTransition = false,\n    component = 'div',\n    components = {},\n    componentsProps = {},\n    container,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    // private\n    // eslint-disable-next-line react/prop-types\n    manager = defaultManager,\n    onBackdropClick,\n    onClose,\n    onKeyDown,\n    open,\n\n    /* eslint-disable react/prop-types */\n    onTransitionEnter,\n    onTransitionExited\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [exited, setExited] = React.useState(true);\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, ref);\n  const hasTransition = getHasTransition(props);\n  const ariaHiddenProp = (_props$ariaHidden = props['aria-hidden']) != null ? _props$ariaHidden : true;\n\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [manager, ariaHiddenProp]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  const ownerState = _extends({}, props, {\n    classes: classesProp,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    exited,\n    hideBackdrop,\n    keepMounted\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  const handleEnter = () => {\n    setExited(false);\n\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n\n  const handleExited = () => {\n    setExited(true);\n\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n\n\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  const childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  const Root = components.Root || component;\n  const rootProps = appendOwnerState(Root, _extends({\n    role: 'presentation'\n  }, other, componentsProps.root, {\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    className: clsx(classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className, className)\n  }), ownerState);\n  const BackdropComponent = components.Backdrop;\n  const backdropProps = appendOwnerState(BackdropComponent, _extends({\n    'aria-hidden': true,\n    open,\n    onClick: handleBackdropClick\n  }, componentsProps.backdrop), ownerState);\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(TrapFocus, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Backdrop: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    backdrop: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default ModalUnstyled;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}