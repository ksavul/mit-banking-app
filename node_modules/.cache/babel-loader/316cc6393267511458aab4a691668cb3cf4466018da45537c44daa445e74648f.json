{"ast":null,"code":"var _jsxFileName = \"/Users/fastnet/devedu/MIT/banking-application-fe/banking-app/mit-banking-app/src/components/Withdraw.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport useUserContext from \"../hooks/useUserContext\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { toast } from \"react-toastify\";\nimport createTransaction from \"../helpers/createTransaction\";\nimport { Button, TextField, Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Withdraw = () => {\n  _s();\n  const [isDisabled, setIsDisabled] = useState(true);\n  const {\n    user,\n    setUser,\n    loggedInUser,\n    setLoggedInUser\n  } = useUserContext();\n  const [balance, setBalance] = useState();\n  const validationSchema = yup.object({\n    withdrawAmount: yup.number().min(1, \"Must be greater or equal than $1\").max(loggedInUser.balance, \"Insufficient Funds\").required(\"Withdraw Amount is required\").typeError(\"The withdraw amount must be a number\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      withdrawAmount: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: () => {\n      //Verify if there's logged in user\n      if (!loggedInUser) {\n        toast.error(\"Please login to make a successful transaction\");\n        return;\n      }\n      const witAmount = parseFloat(formik.values.withdrawAmount);\n      if (witAmount > loggedInUser.balance) {\n        toast.warn(\"Insufficient Funds\");\n        return;\n      }\n      let newBalance = 0;\n      const newData = user.map(u => {\n        if (u.email === loggedInUser.email) {\n          u.balance -= witAmount;\n          newBalance = u.balance;\n          const newTransaction = createTransaction(\"Withdraw\", witAmount);\n          u.transactionHistory.push(newTransaction);\n          setBalance(u.balance);\n        }\n        return u;\n      });\n      setUser(newData);\n      setLoggedInUser(prev => ({\n        ...prev,\n        balance: newBalance\n      }));\n      formik.resetForm();\n      toast.success(\"Withdraw succesful\");\n      return;\n    }\n  });\n\n  //Get initial balance\n  useEffect(() => {\n    if (loggedInUser) {\n      setBalance(loggedInUser.balance);\n    }\n  }, [loggedInUser]);\n\n  //Listen for formik values changes\n  useEffect(() => {\n    const {\n      withdrawAmount\n    } = formik.values;\n    if (withdrawAmount.trim().length > 0) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n  }, [formik.values]);\n  const customStyles = {\n    width: \"fit-content\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loggedInUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please login to your account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: customStyles,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Withdraw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: [\"Balance \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", balance]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            m: 2,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"text-box custom-input-box\",\n              id: \"withdrawAmount\",\n              name: \"withdrawAmount\",\n              label: \"Withdraw Amount\",\n              value: formik.values.withdrawAmount,\n              onChange: formik.handleChange,\n              error: formik.touched.withdrawAmount && Boolean(formik.errors.withdrawAmount),\n              helperText: formik.touched.withdrawAmount && formik.errors.withdrawAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            m: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: formik.handleSubmit,\n              disabled: isDisabled,\n              children: \"Withdraw\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Withdraw, \"O1c7iml4KMW+/9s+7rdNR8rIwiE=\", false, function () {\n  return [useUserContext, useFormik];\n});\n_c = Withdraw;\nexport default Withdraw;\nvar _c;\n$RefreshReg$(_c, \"Withdraw\");","map":{"version":3,"names":["useState","useEffect","useUserContext","useFormik","yup","toast","createTransaction","Button","TextField","Box","jsxDEV","_jsxDEV","Fragment","_Fragment","Withdraw","_s","isDisabled","setIsDisabled","user","setUser","loggedInUser","setLoggedInUser","balance","setBalance","validationSchema","object","withdrawAmount","number","min","max","required","typeError","formik","initialValues","onSubmit","error","witAmount","parseFloat","values","warn","newBalance","newData","map","u","email","newTransaction","transactionHistory","push","prev","resetForm","success","trim","length","customStyles","width","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","m","id","name","label","value","onChange","handleChange","touched","Boolean","errors","helperText","variant","onClick","handleSubmit","disabled","_c","$RefreshReg$"],"sources":["/Users/fastnet/devedu/MIT/banking-application-fe/banking-app/mit-banking-app/src/components/Withdraw.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport useUserContext from \"../hooks/useUserContext\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { toast } from \"react-toastify\";\n\nimport createTransaction from \"../helpers/createTransaction\";\n\nimport { Button, TextField, Box } from \"@mui/material\";\nconst Withdraw = () => {\n  const [isDisabled, setIsDisabled] = useState(true);\n  const { user, setUser, loggedInUser, setLoggedInUser } = useUserContext();\n  const [balance, setBalance] = useState();\n\n  const validationSchema = yup.object({\n    withdrawAmount: yup\n      .number()\n      .min(1, \"Must be greater or equal than $1\")\n      .max(loggedInUser.balance, \"Insufficient Funds\")\n      .required(\"Withdraw Amount is required\")\n      .typeError(\"The withdraw amount must be a number\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      withdrawAmount: \"\",\n    },\n\n    validationSchema: validationSchema,\n\n    onSubmit: () => {\n      //Verify if there's logged in user\n      if (!loggedInUser) {\n        toast.error(\"Please login to make a successful transaction\");\n        return;\n      }\n\n      const witAmount = parseFloat(formik.values.withdrawAmount);\n\n      if (witAmount > loggedInUser.balance) {\n        toast.warn(\"Insufficient Funds\");\n        return;\n      }\n\n      let newBalance = 0;\n\n      const newData = user.map((u) => {\n        if (u.email === loggedInUser.email) {\n          u.balance -= witAmount;\n          newBalance = u.balance;\n          const newTransaction = createTransaction(\"Withdraw\", witAmount);\n          u.transactionHistory.push(newTransaction);\n          setBalance(u.balance);\n        }\n        return u;\n      });\n\n      setUser(newData);\n      setLoggedInUser((prev) => ({ ...prev, balance: newBalance }));\n      formik.resetForm();\n      toast.success(\"Withdraw succesful\");\n      return;\n    },\n  });\n\n  //Get initial balance\n  useEffect(() => {\n    if (loggedInUser) {\n      setBalance(loggedInUser.balance);\n    }\n  }, [loggedInUser]);\n\n  //Listen for formik values changes\n  useEffect(() => {\n    const { withdrawAmount } = formik.values;\n\n    if (withdrawAmount.trim().length > 0) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n  }, [formik.values]);\n\n  const customStyles = {\n    width: \"fit-content\",\n  };\n  return (\n    <>\n      {!loggedInUser ? (\n        <>\n          <h3>Withdraw</h3>\n          <p>Please login to your account</p>\n        </>\n      ) : (\n        <div className=\"card\" style={customStyles}>\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <h3>Withdraw</h3>\n              <h5 className=\"card-title\">\n                Balance <span>${balance}</span>\n              </h5>\n            </div>\n            <div>\n              <Box m={2}>\n                <TextField\n                  className=\"text-box custom-input-box\"\n                  id=\"withdrawAmount\"\n                  name=\"withdrawAmount\"\n                  label=\"Withdraw Amount\"\n                  value={formik.values.withdrawAmount}\n                  onChange={formik.handleChange}\n                  error={\n                    formik.touched.withdrawAmount &&\n                    Boolean(formik.errors.withdrawAmount)\n                  }\n                  helperText={\n                    formik.touched.withdrawAmount &&\n                    formik.errors.withdrawAmount\n                  }\n                />\n              </Box>\n              <Box m={2}>\n                <Button\n                  variant=\"contained\"\n                  onClick={formik.handleSubmit}\n                  disabled={isDisabled}\n                >\n                  Withdraw\n                </Button>\n              </Box>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Withdraw;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,OAAOC,iBAAiB,MAAM,8BAA8B;AAE5D,SAASC,MAAM,EAAEC,SAAS,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACvD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM;IAAEkB,IAAI;IAAEC,OAAO;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAGnB,cAAc,CAAC,CAAC;EACzE,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,CAAC;EAExC,MAAMwB,gBAAgB,GAAGpB,GAAG,CAACqB,MAAM,CAAC;IAClCC,cAAc,EAAEtB,GAAG,CAChBuB,MAAM,CAAC,CAAC,CACRC,GAAG,CAAC,CAAC,EAAE,kCAAkC,CAAC,CAC1CC,GAAG,CAACT,YAAY,CAACE,OAAO,EAAE,oBAAoB,CAAC,CAC/CQ,QAAQ,CAAC,6BAA6B,CAAC,CACvCC,SAAS,CAAC,sCAAsC;EACrD,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG7B,SAAS,CAAC;IACvB8B,aAAa,EAAE;MACbP,cAAc,EAAE;IAClB,CAAC;IAEDF,gBAAgB,EAAEA,gBAAgB;IAElCU,QAAQ,EAAEA,CAAA,KAAM;MACd;MACA,IAAI,CAACd,YAAY,EAAE;QACjBf,KAAK,CAAC8B,KAAK,CAAC,+CAA+C,CAAC;QAC5D;MACF;MAEA,MAAMC,SAAS,GAAGC,UAAU,CAACL,MAAM,CAACM,MAAM,CAACZ,cAAc,CAAC;MAE1D,IAAIU,SAAS,GAAGhB,YAAY,CAACE,OAAO,EAAE;QACpCjB,KAAK,CAACkC,IAAI,CAAC,oBAAoB,CAAC;QAChC;MACF;MAEA,IAAIC,UAAU,GAAG,CAAC;MAElB,MAAMC,OAAO,GAAGvB,IAAI,CAACwB,GAAG,CAAEC,CAAC,IAAK;QAC9B,IAAIA,CAAC,CAACC,KAAK,KAAKxB,YAAY,CAACwB,KAAK,EAAE;UAClCD,CAAC,CAACrB,OAAO,IAAIc,SAAS;UACtBI,UAAU,GAAGG,CAAC,CAACrB,OAAO;UACtB,MAAMuB,cAAc,GAAGvC,iBAAiB,CAAC,UAAU,EAAE8B,SAAS,CAAC;UAC/DO,CAAC,CAACG,kBAAkB,CAACC,IAAI,CAACF,cAAc,CAAC;UACzCtB,UAAU,CAACoB,CAAC,CAACrB,OAAO,CAAC;QACvB;QACA,OAAOqB,CAAC;MACV,CAAC,CAAC;MAEFxB,OAAO,CAACsB,OAAO,CAAC;MAChBpB,eAAe,CAAE2B,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE1B,OAAO,EAAEkB;MAAW,CAAC,CAAC,CAAC;MAC7DR,MAAM,CAACiB,SAAS,CAAC,CAAC;MAClB5C,KAAK,CAAC6C,OAAO,CAAC,oBAAoB,CAAC;MACnC;IACF;EACF,CAAC,CAAC;;EAEF;EACAjD,SAAS,CAAC,MAAM;IACd,IAAImB,YAAY,EAAE;MAChBG,UAAU,CAACH,YAAY,CAACE,OAAO,CAAC;IAClC;EACF,CAAC,EAAE,CAACF,YAAY,CAAC,CAAC;;EAElB;EACAnB,SAAS,CAAC,MAAM;IACd,MAAM;MAAEyB;IAAe,CAAC,GAAGM,MAAM,CAACM,MAAM;IAExC,IAAIZ,cAAc,CAACyB,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;MACpCnC,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,MAAM;MACLA,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,CAACe,MAAM,CAACM,MAAM,CAAC,CAAC;EAEnB,MAAMe,YAAY,GAAG;IACnBC,KAAK,EAAE;EACT,CAAC;EACD,oBACE3C,OAAA,CAAAE,SAAA;IAAA0C,QAAA,EACG,CAACnC,YAAY,gBACZT,OAAA,CAAAE,SAAA;MAAA0C,QAAA,gBACE5C,OAAA;QAAA4C,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBhD,OAAA;QAAA4C,QAAA,EAAG;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,eACnC,CAAC,gBAEHhD,OAAA;MAAKiD,SAAS,EAAC,MAAM;MAACC,KAAK,EAAER,YAAa;MAAAE,QAAA,eACxC5C,OAAA;QAAKiD,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxB5C,OAAA;UAAKiD,SAAS,EAAC,KAAK;UAAAL,QAAA,gBAClB5C,OAAA;YAAA4C,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBhD,OAAA;YAAIiD,SAAS,EAAC,YAAY;YAAAL,QAAA,GAAC,UACjB,eAAA5C,OAAA;cAAA4C,QAAA,GAAM,GAAC,EAACjC,OAAO;YAAA;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACNhD,OAAA;UAAA4C,QAAA,gBACE5C,OAAA,CAACF,GAAG;YAACqD,CAAC,EAAE,CAAE;YAAAP,QAAA,eACR5C,OAAA,CAACH,SAAS;cACRoD,SAAS,EAAC,2BAA2B;cACrCG,EAAE,EAAC,gBAAgB;cACnBC,IAAI,EAAC,gBAAgB;cACrBC,KAAK,EAAC,iBAAiB;cACvBC,KAAK,EAAElC,MAAM,CAACM,MAAM,CAACZ,cAAe;cACpCyC,QAAQ,EAAEnC,MAAM,CAACoC,YAAa;cAC9BjC,KAAK,EACHH,MAAM,CAACqC,OAAO,CAAC3C,cAAc,IAC7B4C,OAAO,CAACtC,MAAM,CAACuC,MAAM,CAAC7C,cAAc,CACrC;cACD8C,UAAU,EACRxC,MAAM,CAACqC,OAAO,CAAC3C,cAAc,IAC7BM,MAAM,CAACuC,MAAM,CAAC7C;YACf;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNhD,OAAA,CAACF,GAAG;YAACqD,CAAC,EAAE,CAAE;YAAAP,QAAA,eACR5C,OAAA,CAACJ,MAAM;cACLkE,OAAO,EAAC,WAAW;cACnBC,OAAO,EAAE1C,MAAM,CAAC2C,YAAa;cAC7BC,QAAQ,EAAE5D,UAAW;cAAAuC,QAAA,EACtB;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACN,gBACD,CAAC;AAEP,CAAC;AAAC5C,EAAA,CA/HID,QAAQ;EAAA,QAE6CZ,cAAc,EAYxDC,SAAS;AAAA;AAAA0E,EAAA,GAdpB/D,QAAQ;AAiId,eAAeA,QAAQ;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}