{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport clsx from 'clsx';\nimport extractEventHandlers from './extractEventHandlers';\nimport omitEventHandlers from './omitEventHandlers';\n\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on an unstyled component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `componentsProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nexport default function mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className);\n    const props = _extends({}, additionalProps, externalForwardedProps, externalSlotProps, {\n      className: joinedClasses\n    });\n    if (joinedClasses.length === 0) {\n      delete props.className;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  } // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers(_extends({}, externalForwardedProps, externalSlotProps));\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n  const joinedClasses = clsx(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className, internalSlotProps == null ? void 0 : internalSlotProps.className);\n  const props = _extends({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers, {\n    className: joinedClasses\n  });\n  if (joinedClasses.length === 0) {\n    delete props.className;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}","map":{"version":3,"names":["_extends","clsx","extractEventHandlers","omitEventHandlers","mergeSlotProps","parameters","getSlotProps","additionalProps","externalSlotProps","externalForwardedProps","className","joinedClasses","props","length","internalRef","undefined","eventHandlers","componentsPropsWithoutEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","ref"],"sources":["/Users/fastnet/devedu/MIT/banking-application-fe/banking-app/mit-banking-app/node_modules/@mui/base/utils/mergeSlotProps.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport clsx from 'clsx';\nimport extractEventHandlers from './extractEventHandlers';\nimport omitEventHandlers from './omitEventHandlers';\n\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on an unstyled component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `componentsProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nexport default function mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className);\n\n    const props = _extends({}, additionalProps, externalForwardedProps, externalSlotProps, {\n      className: joinedClasses\n    });\n\n    if (joinedClasses.length === 0) {\n      delete props.className;\n    }\n\n    return {\n      props,\n      internalRef: undefined\n    };\n  } // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n\n  const eventHandlers = extractEventHandlers(_extends({}, externalForwardedProps, externalSlotProps));\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n  const joinedClasses = clsx(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className, internalSlotProps == null ? void 0 : internalSlotProps.className);\n\n  const props = _extends({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers, {\n    className: joinedClasses\n  });\n\n  if (joinedClasses.length === 0) {\n    delete props.className;\n  }\n\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,OAAOC,iBAAiB,MAAM,qBAAqB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,cAAcA,CAACC,UAAU,EAAE;EACjD,MAAM;IACJC,YAAY;IACZC,eAAe;IACfC,iBAAiB;IACjBC,sBAAsB;IACtBC;EACF,CAAC,GAAGL,UAAU;EAEd,IAAI,CAACC,YAAY,EAAE;IACjB;IACA;IACA,MAAMK,aAAa,GAAGV,IAAI,CAACQ,sBAAsB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,sBAAsB,CAACC,SAAS,EAAEF,iBAAiB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACE,SAAS,EAAEA,SAAS,EAAEH,eAAe,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACG,SAAS,CAAC;IAEjP,MAAME,KAAK,GAAGZ,QAAQ,CAAC,CAAC,CAAC,EAAEO,eAAe,EAAEE,sBAAsB,EAAED,iBAAiB,EAAE;MACrFE,SAAS,EAAEC;IACb,CAAC,CAAC;IAEF,IAAIA,aAAa,CAACE,MAAM,KAAK,CAAC,EAAE;MAC9B,OAAOD,KAAK,CAACF,SAAS;IACxB;IAEA,OAAO;MACLE,KAAK;MACLE,WAAW,EAAEC;IACf,CAAC;EACH,CAAC,CAAC;EACF;;EAGA,MAAMC,aAAa,GAAGd,oBAAoB,CAACF,QAAQ,CAAC,CAAC,CAAC,EAAES,sBAAsB,EAAED,iBAAiB,CAAC,CAAC;EACnG,MAAMS,mCAAmC,GAAGd,iBAAiB,CAACK,iBAAiB,CAAC;EAChF,MAAMU,8BAA8B,GAAGf,iBAAiB,CAACM,sBAAsB,CAAC;EAChF,MAAMU,iBAAiB,GAAGb,YAAY,CAACU,aAAa,CAAC;EACrD,MAAML,aAAa,GAAGV,IAAI,CAACQ,sBAAsB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,sBAAsB,CAACC,SAAS,EAAEF,iBAAiB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACE,SAAS,EAAEA,SAAS,EAAEH,eAAe,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACG,SAAS,EAAES,iBAAiB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACT,SAAS,CAAC;EAEnT,MAAME,KAAK,GAAGZ,QAAQ,CAAC,CAAC,CAAC,EAAEmB,iBAAiB,EAAEZ,eAAe,EAAEW,8BAA8B,EAAED,mCAAmC,EAAE;IAClIP,SAAS,EAAEC;EACb,CAAC,CAAC;EAEF,IAAIA,aAAa,CAACE,MAAM,KAAK,CAAC,EAAE;IAC9B,OAAOD,KAAK,CAACF,SAAS;EACxB;EAEA,OAAO;IACLE,KAAK;IACLE,WAAW,EAAEK,iBAAiB,CAACC;EACjC,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}