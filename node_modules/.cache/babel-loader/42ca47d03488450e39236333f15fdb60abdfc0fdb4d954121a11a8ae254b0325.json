{"ast":null,"code":"var _jsxFileName = \"/Users/fastnet/devedu/MIT/banking-application-fe/banking-app/mit-banking-app/src/components/popups/LoginPopup.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport { useNavigate } from \"react-router-dom\";\nimport useUserContext from \"../../hooks/useUserContext\";\nimport * as yup from \"yup\";\nimport { Button, TextField, Box } from \"@mui/material\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginPopUp = _ref => {\n  _s();\n  let {\n    handleClose\n  } = _ref;\n  const [isDissabled, setIsDisabled] = useState(true);\n  const {\n    user,\n    setLoggedInUser\n  } = useUserContext();\n  const navigate = useNavigate();\n\n  //Validation schema\n  const validationSchema = yup.object({\n    email: yup.string().required(\"Email is required\"),\n    password: yup.string().required(\"Password is required\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: () => {\n      const targetUser = user.find(user => user.email === formik.values.email);\n      if (!targetUser) {\n        toast.error(\"User does not exist\");\n        return;\n      }\n\n      //Validate password\n      if (targetUser.password !== formik.values.password) {\n        toast.warn(\"Invalid credentials\");\n        return;\n      }\n      setLoggedInUser(targetUser);\n      formik.resetForm();\n      handleClose();\n      navigate(\"/myAccount\");\n      toast.success(`Welcome, ${targetUser.name}!`);\n      return;\n    }\n  });\n\n  //Listen for formik values changes\n  useEffect(() => {\n    const {\n      email,\n      password\n    } = formik.values;\n    if (email.trim().length > 0 && password.trim().length > 0) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n  }, [formik.values]);\n  const cancelButtonStyles = {\n    backgroundColor: \"#495057\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                m: 2,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  className: \"text-box custom-input-box\",\n                  id: \"email\",\n                  name: \"email\",\n                  label: \"Email\",\n                  value: formik.values.email,\n                  onChange: formik.handleChange,\n                  error: formik.touched.email && Boolean(formik.errors.email),\n                  helperText: formik.touched.email && formik.errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                m: 2,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  className: \"text-box custom-input-box\",\n                  id: \"password\",\n                  name: \"password\",\n                  label: \"Password\",\n                  type: \"password\",\n                  value: formik.values.password,\n                  onChange: formik.handleChange,\n                  error: formik.touched.password && Boolean(formik.errors.password),\n                  helperText: formik.touched.password && formik.errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                m: 2,\n                className: \"custom-btn-group\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  style: cancelButtonStyles,\n                  type: \"submit\",\n                  onClick: handleClose,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  type: \"submit\",\n                  onClick: formik.handleSubmit,\n                  disabled: isDissabled,\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(LoginPopUp, \"GLKx6uZNkwxdU0w1qj1UbU2wjiM=\", false, function () {\n  return [useUserContext, useNavigate, useFormik];\n});\n_c = LoginPopUp;\nexport default LoginPopUp;\nvar _c;\n$RefreshReg$(_c, \"LoginPopUp\");","map":{"version":3,"names":["useState","useEffect","useFormik","useNavigate","useUserContext","yup","Button","TextField","Box","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPopUp","_ref","_s","handleClose","isDissabled","setIsDisabled","user","setLoggedInUser","navigate","validationSchema","object","email","string","required","password","formik","initialValues","onSubmit","targetUser","find","values","error","warn","resetForm","success","name","trim","length","cancelButtonStyles","backgroundColor","children","className","fileName","_jsxFileName","lineNumber","columnNumber","m","id","label","value","onChange","handleChange","touched","Boolean","errors","helperText","type","variant","style","onClick","handleSubmit","disabled","_c","$RefreshReg$"],"sources":["/Users/fastnet/devedu/MIT/banking-application-fe/banking-app/mit-banking-app/src/components/popups/LoginPopup.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport { useNavigate } from \"react-router-dom\";\nimport useUserContext from \"../../hooks/useUserContext\";\nimport * as yup from \"yup\";\nimport { Button, TextField, Box } from \"@mui/material\";\nimport { toast } from \"react-toastify\";\n\nconst LoginPopUp = ({ handleClose }) => {\n  const [isDissabled, setIsDisabled] = useState(true);\n  const { user, setLoggedInUser } = useUserContext();\n  const navigate = useNavigate();\n\n  //Validation schema\n  const validationSchema = yup.object({\n    email: yup.string().required(\"Email is required\"),\n    password: yup.string().required(\"Password is required\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n\n    validationSchema: validationSchema,\n\n    onSubmit: () => {\n      const targetUser = user.find(\n        (user) => user.email === formik.values.email\n      );\n\n      if (!targetUser) {\n        toast.error(\"User does not exist\");\n        return;\n      }\n\n      //Validate password\n      if (targetUser.password !== formik.values.password) {\n        toast.warn(\"Invalid credentials\");\n        return;\n      }\n\n      setLoggedInUser(targetUser);\n\n      formik.resetForm();\n      handleClose();\n      navigate(\"/myAccount\");\n      toast.success(`Welcome, ${targetUser.name}!`);\n      return;\n    },\n  });\n\n  //Listen for formik values changes\n  useEffect(() => {\n    const { email, password } = formik.values;\n\n    if (email.trim().length > 0 && password.trim().length > 0) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n  }, [formik.values]);\n\n  const cancelButtonStyles = {\n    backgroundColor: \"#495057\",\n  };\n\n  return (\n    <>\n      <div className=\"popup-box\">\n        <div className=\"box\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <span className=\"\">Login</span>\n              <hr />\n              <div>\n                <Box m={2}>\n                  <TextField\n                    className=\"text-box custom-input-box\"\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    error={formik.touched.email && Boolean(formik.errors.email)}\n                    helperText={formik.touched.email && formik.errors.email}\n                  />\n                </Box>\n\n                <Box m={2}>\n                  <TextField\n                    className=\"text-box custom-input-box\"\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    error={\n                      formik.touched.password && Boolean(formik.errors.password)\n                    }\n                    helperText={\n                      formik.touched.password && formik.errors.password\n                    }\n                  />\n                </Box>\n\n                <Box m={2} className=\"custom-btn-group\">\n                  <Button\n                    variant=\"contained\"\n                    style={cancelButtonStyles}\n                    type=\"submit\"\n                    onClick={handleClose}\n                  >\n                    Cancel\n                  </Button>\n\n                  <Button\n                    variant=\"contained\"\n                    type=\"submit\"\n                    onClick={formik.handleSubmit}\n                    disabled={isDissabled}\n                  >\n                    Login\n                  </Button>\n                </Box>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LoginPopUp;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,MAAM,EAAEC,SAAS,EAAEC,GAAG,QAAQ,eAAe;AACtD,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,UAAU,GAAGC,IAAA,IAAqB;EAAAC,EAAA;EAAA,IAApB;IAAEC;EAAY,CAAC,GAAAF,IAAA;EACjC,MAAM,CAACG,WAAW,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACnD,MAAM;IAAEoB,IAAI;IAAEC;EAAgB,CAAC,GAAGjB,cAAc,CAAC,CAAC;EAClD,MAAMkB,QAAQ,GAAGnB,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMoB,gBAAgB,GAAGlB,GAAG,CAACmB,MAAM,CAAC;IAClCC,KAAK,EAAEpB,GAAG,CAACqB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,mBAAmB,CAAC;IACjDC,QAAQ,EAAEvB,GAAG,CAACqB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,sBAAsB;EACxD,CAAC,CAAC;EAEF,MAAME,MAAM,GAAG3B,SAAS,CAAC;IACvB4B,aAAa,EAAE;MACbL,KAAK,EAAE,EAAE;MACTG,QAAQ,EAAE;IACZ,CAAC;IAEDL,gBAAgB,EAAEA,gBAAgB;IAElCQ,QAAQ,EAAEA,CAAA,KAAM;MACd,MAAMC,UAAU,GAAGZ,IAAI,CAACa,IAAI,CACzBb,IAAI,IAAKA,IAAI,CAACK,KAAK,KAAKI,MAAM,CAACK,MAAM,CAACT,KACzC,CAAC;MAED,IAAI,CAACO,UAAU,EAAE;QACfvB,KAAK,CAAC0B,KAAK,CAAC,qBAAqB,CAAC;QAClC;MACF;;MAEA;MACA,IAAIH,UAAU,CAACJ,QAAQ,KAAKC,MAAM,CAACK,MAAM,CAACN,QAAQ,EAAE;QAClDnB,KAAK,CAAC2B,IAAI,CAAC,qBAAqB,CAAC;QACjC;MACF;MAEAf,eAAe,CAACW,UAAU,CAAC;MAE3BH,MAAM,CAACQ,SAAS,CAAC,CAAC;MAClBpB,WAAW,CAAC,CAAC;MACbK,QAAQ,CAAC,YAAY,CAAC;MACtBb,KAAK,CAAC6B,OAAO,CAAE,YAAWN,UAAU,CAACO,IAAK,GAAE,CAAC;MAC7C;IACF;EACF,CAAC,CAAC;;EAEF;EACAtC,SAAS,CAAC,MAAM;IACd,MAAM;MAAEwB,KAAK;MAAEG;IAAS,CAAC,GAAGC,MAAM,CAACK,MAAM;IAEzC,IAAIT,KAAK,CAACe,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,IAAIb,QAAQ,CAACY,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;MACzDtB,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,MAAM;MACLA,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,CAACU,MAAM,CAACK,MAAM,CAAC,CAAC;EAEnB,MAAMQ,kBAAkB,GAAG;IACzBC,eAAe,EAAE;EACnB,CAAC;EAED,oBACEhC,OAAA,CAAAE,SAAA;IAAA+B,QAAA,eACEjC,OAAA;MAAKkC,SAAS,EAAC,WAAW;MAAAD,QAAA,eACxBjC,OAAA;QAAKkC,SAAS,EAAC,KAAK;QAAAD,QAAA,eAClBjC,OAAA;UAAKkC,SAAS,EAAC,MAAM;UAAAD,QAAA,eACnBjC,OAAA;YAAKkC,SAAS,EAAC,WAAW;YAAAD,QAAA,gBACxBjC,OAAA;cAAMkC,SAAS,EAAC,EAAE;cAAAD,QAAA,EAAC;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC/BtC,OAAA;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACNtC,OAAA;cAAAiC,QAAA,gBACEjC,OAAA,CAACH,GAAG;gBAAC0C,CAAC,EAAE,CAAE;gBAAAN,QAAA,eACRjC,OAAA,CAACJ,SAAS;kBACRsC,SAAS,EAAC,2BAA2B;kBACrCM,EAAE,EAAC,OAAO;kBACVZ,IAAI,EAAC,OAAO;kBACZa,KAAK,EAAC,OAAO;kBACbC,KAAK,EAAExB,MAAM,CAACK,MAAM,CAACT,KAAM;kBAC3B6B,QAAQ,EAAEzB,MAAM,CAAC0B,YAAa;kBAC9BpB,KAAK,EAAEN,MAAM,CAAC2B,OAAO,CAAC/B,KAAK,IAAIgC,OAAO,CAAC5B,MAAM,CAAC6B,MAAM,CAACjC,KAAK,CAAE;kBAC5DkC,UAAU,EAAE9B,MAAM,CAAC2B,OAAO,CAAC/B,KAAK,IAAII,MAAM,CAAC6B,MAAM,CAACjC;gBAAM;kBAAAqB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzD;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENtC,OAAA,CAACH,GAAG;gBAAC0C,CAAC,EAAE,CAAE;gBAAAN,QAAA,eACRjC,OAAA,CAACJ,SAAS;kBACRsC,SAAS,EAAC,2BAA2B;kBACrCM,EAAE,EAAC,UAAU;kBACbZ,IAAI,EAAC,UAAU;kBACfa,KAAK,EAAC,UAAU;kBAChBQ,IAAI,EAAC,UAAU;kBACfP,KAAK,EAAExB,MAAM,CAACK,MAAM,CAACN,QAAS;kBAC9B0B,QAAQ,EAAEzB,MAAM,CAAC0B,YAAa;kBAC9BpB,KAAK,EACHN,MAAM,CAAC2B,OAAO,CAAC5B,QAAQ,IAAI6B,OAAO,CAAC5B,MAAM,CAAC6B,MAAM,CAAC9B,QAAQ,CAC1D;kBACD+B,UAAU,EACR9B,MAAM,CAAC2B,OAAO,CAAC5B,QAAQ,IAAIC,MAAM,CAAC6B,MAAM,CAAC9B;gBAC1C;kBAAAkB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENtC,OAAA,CAACH,GAAG;gBAAC0C,CAAC,EAAE,CAAE;gBAACL,SAAS,EAAC,kBAAkB;gBAAAD,QAAA,gBACrCjC,OAAA,CAACL,MAAM;kBACLuD,OAAO,EAAC,WAAW;kBACnBC,KAAK,EAAEpB,kBAAmB;kBAC1BkB,IAAI,EAAC,QAAQ;kBACbG,OAAO,EAAE9C,WAAY;kBAAA2B,QAAA,EACtB;gBAED;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAETtC,OAAA,CAACL,MAAM;kBACLuD,OAAO,EAAC,WAAW;kBACnBD,IAAI,EAAC,QAAQ;kBACbG,OAAO,EAAElC,MAAM,CAACmC,YAAa;kBAC7BC,QAAQ,EAAE/C,WAAY;kBAAA0B,QAAA,EACvB;gBAED;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAACjC,EAAA,CA9HIF,UAAU;EAAA,QAEoBV,cAAc,EAC/BD,WAAW,EAQbD,SAAS;AAAA;AAAAgE,EAAA,GAXpBpD,UAAU;AAgIhB,eAAeA,UAAU;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}